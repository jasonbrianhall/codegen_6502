;
; File generated by cc65 v 2.18 - Fedora 2.19-11.fc41
;
	.fopt		compiler,"cc65 v 2.18 - Fedora 2.19-11.fc41"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.export		_palette
	.export		_wait_for_vblank
	.export		_load_palette
	.export		_clear_screen
	.export		_draw_pattern
	.export		_main

.segment	"RODATA"

_palette:
	.byte	$0F
	.byte	$00
	.byte	$10
	.byte	$30
	.byte	$0F
	.byte	$06
	.byte	$16
	.byte	$26
	.byte	$0F
	.byte	$09
	.byte	$19
	.byte	$29
	.byte	$0F
	.byte	$02
	.byte	$12
	.byte	$22

; ---------------------------------------------------------------
; void __near__ wait_for_vblank (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_wait_for_vblank: near

.segment	"CODE"

	jmp     L0014
L0014:	ldx     #$00
	lda     $2002
	ldx     #$00
	and     #$80
	jsr     bnegax
	jne     L0014
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ load_palette (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_load_palette: near

.segment	"CODE"

	jsr     decsp1
	ldx     #$00
	lda     #$3F
	sta     $2006
	ldx     #$00
	lda     #$00
	sta     $2006
	ldx     #$00
	lda     #$00
	ldy     #$00
	sta     (sp),y
L0026:	ldy     #$00
	ldx     #$00
	lda     (sp),y
	cmp     #$10
	jsr     boolult
	jne     L0029
	jmp     L0027
L0029:	lda     #<(_palette)
	ldx     #>(_palette)
	ldy     #$00
	clc
	adc     (sp),y
	bcc     L0034
	inx
L0034:	ldy     #$00
	jsr     ldauidx
	sta     $2007
	ldy     #$00
	ldx     #$00
	lda     (sp),y
	pha
	clc
	adc     #$01
	ldy     #$00
	sta     (sp),y
	pla
	jmp     L0026
L0027:	jsr     incsp1
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ clear_screen (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_clear_screen: near

.segment	"CODE"

	jsr     decsp2
	ldx     #$00
	lda     #$20
	sta     $2006
	ldx     #$00
	lda     #$00
	sta     $2006
	ldx     #$00
	lda     #$00
	ldy     #$00
	jsr     staxysp
L0040:	ldy     #$01
	jsr     ldaxysp
	cpx     #$03
	bne     L0047
	cmp     #$C0
L0047:	jsr     boolult
	jne     L0043
	jmp     L0041
L0043:	ldx     #$00
	lda     #$00
	sta     $2007
	ldy     #$01
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$00
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jmp     L0040
L0041:	jsr     incsp2
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ draw_pattern (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_pattern: near

.segment	"CODE"

	jsr     decsp2
	ldx     #$00
	lda     #$21
	sta     $2006
	ldx     #$00
	lda     #$4A
	sta     $2006
	ldx     #$00
	lda     #$00
	ldy     #$00
	sta     (sp),y
L0059:	ldy     #$00
	ldx     #$00
	lda     (sp),y
	cmp     #$08
	jsr     boolult
	jne     L005C
	jmp     L005A
L005C:	ldx     #$00
	lda     #$00
	ldy     #$01
	sta     (sp),y
L0061:	ldy     #$01
	ldx     #$00
	lda     (sp),y
	cmp     #$08
	jsr     boolult
	jne     L0064
	jmp     L0062
L0064:	ldx     #$00
	lda     #$01
	sta     $2007
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	pha
	clc
	adc     #$01
	ldy     #$01
	sta     (sp),y
	pla
	jmp     L0061
L0062:	ldx     #$00
	lda     #$21
	sta     $2006
	ldy     #$00
	ldx     #$00
	lda     (sp),y
	jsr     incax1
	jsr     shlax4
	jsr     shlax1
	ldy     #$4A
	jsr     incaxy
	ldx     #$00
	sta     $2006
	ldy     #$00
	ldx     #$00
	lda     (sp),y
	pha
	clc
	adc     #$01
	ldy     #$00
	sta     (sp),y
	pla
	jmp     L0059
L005A:	jsr     incsp2
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	sei
	jsr     _wait_for_vblank
	jsr     _wait_for_vblank
	ldx     #$00
	lda     #$00
	sta     $2001
	jsr     _load_palette
	jsr     _clear_screen
	jsr     _draw_pattern
	ldx     #$00
	lda     #$00
	sta     $2005
	ldx     #$00
	lda     #$00
	sta     $2005
	ldx     #$00
	lda     #$08
	sta     $2001
	jmp     L0098
L0096:	jsr     _wait_for_vblank
L0098:	jmp     L0096
	ldx     #$00
	lda     #$00
	jmp     L007A
L007A:	rts

.endproc

